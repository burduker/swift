= f.input :title
= f.input :kind, :as => :select, :selected => @object.kind, :options => FormsCard::Kinds, :include_blank => false
= f.input :text, :as => :text, :markdown => true
- allow :auditor do
  .control-group.as_group.as_clonable
    = f.group_label :fields
    - @object.json.each do |key, value|
      - type, values, require = value
      .controls.horizontal
        = text_field_tag "key[#{key}]", :value => key
        = check_box_tag "require[#{key}]", :checked => ( require ? 'checked' : nil ), :value => 1
        = select_tag "type[#{key}]", :selected => type, :options => FormsCard::Types, :include_blank => 'Удалить'
        - klass = %W{select multiple}.include?(type) ? 'show' : 'hide'
        = text_area_tag "value[#{key}]", :value => values, :class => klass

    .hide.controls.horizontal
      = text_field_tag :'key[json_new]'
      = select_tag :'type[json_new]', :selected => 'string', :options => FormsCard::Types, :include_blank => 'Удалить'
      = text_area_tag "value[json_new]", :value => '', :class => 'hide'
    .controls.clone
      = link_to mk_glyph('plus-sign') + ' ' + pat('menu.add.fields'), 'javascript:;', :onclick => 'cloneControlGroup(this)', :class => 'btn btn-mini'

  = f.input :slug
  = f.input :receivers

- allow :designer do
  = f.input :folder_id, :as => :select, :selected => @object.folder_id, :collection => Folder.all, :fields => [ :title, :id ], :include_blank => false
= f.submits
