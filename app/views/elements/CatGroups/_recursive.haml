:ruby
  groups = CatGroup.published.all( :parent => from, :order => [:path])
  len = groups.length
  k = 1
  tree = []

  groups.each do |group|
    ensued = @swift[:module_path_ids].include? group.id
    master = level == 0

    leaf = {}
    leaf[:title] = group.title
    leaf[:href] = @swift[:module_root] / group.path

    leaf[:class] = master ? 'master' : 'slave'
    leaf[:class] += ' active'  if ensued

    child = false
    if ensued || @opts[:expand]
      child = partial @recursive, :locals => { :from => group, :level => level + 1, :prefix => prefix + '/' + group.slug }
    end

    if child
      leaf[:class] += ' open'
      leaf[:child] = child
    else
      leaf[:class] += ' leaf'  if ensued && !master
    end

    leaf[:class] += ' first'  if k == 1
    leaf[:class] += ' last'   if k == len

    k += 1
    tree << leaf
  end

  return tree.length > 0 ? tree : false
